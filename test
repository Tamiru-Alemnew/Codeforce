#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <openssl/aes.h>

#define PLAINTEXT_HEX "255044462d312e350a25d0d4c5d80a34"
#define CIPHERTEXT_HEX "d06bf9d0dab8e8ef880660d2af65aa82"
#define IV_HEX "09080706050403020100A2B2C2D2E2F2"

void hexStringToByteArray(const char* hexString, unsigned char* byteArray) {
    size_t len = strlen(hexString);
    for (size_t i = 0; i < len; i += 2) {
        sscanf(&hexString[i], "%2hhx", &byteArray[i / 2]);
    }
}

void decryptAndPrint(const unsigned char* key, const unsigned char* iv, const unsigned char* ciphertext) {
    AES_KEY aesKey;
    unsigned char tmp_iv[16] = {0};
    memcpy(tmp_iv, iv, 16);
    AES_set_decrypt_key(key, 128, &aesKey);
    unsigned char plaintext[AES_BLOCK_SIZE];
    AES_cbc_encrypt(ciphertext, plaintext, AES_BLOCK_SIZE, &aesKey, tmp_iv, AES_DECRYPT);
    

    unsigned char original_plaintext[AES_BLOCK_SIZE];
    hexStringToByteArray(PLAINTEXT_HEX, original_plaintext);
    if (memcmp(plaintext, original_plaintext, AES_BLOCK_SIZE) == 0) {
        printf("Decrypted Ciphertext: ");
        for (int i = 0; i < AES_BLOCK_SIZE; i++) {
            printf("%02x", plaintext[i]);
        }
        printf("\n");
        printf("Key used for encryption: ");
        for (int i = 0; i < 16; i++) {
            printf("%02x", key[i]);
        }
        printf("\n");
    }
}

int main() {
    unsigned char ciphertext[AES_BLOCK_SIZE];
    unsigned char iv[AES_BLOCK_SIZE];

    hexStringToByteArray(CIPHERTEXT_HEX, ciphertext);
    hexStringToByteArray(IV_HEX, iv);
    
    int start_time = 1524020929; 

    int end_time = start_time - 7200; 
    
    for (int time = start_time; time >= end_time; time--) {
        srand(time);
        unsigned char key[16];
        for (int i = 0; i < 16; i++) {
            key[i] = rand() % 256;
        }
        decryptAndPrint(key, iv, ciphertext);
    }  

    return 0;
}